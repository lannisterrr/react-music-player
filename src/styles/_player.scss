.player-container {
  min-height: 20vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
}

.time-control {
  width: 50%; // because we want input to stretch out the whole element

  display: flex;
  input {
    width: 100%;
    -webkit-appearance: none;
    background: transparent;
    cursor: pointer;
  }
  p {
    padding: 1rem;
  }
}

.player-control {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 30%;
  padding: 1rem;
  svg {
    cursor: pointer;
  }
}

input[type='range']:focus {
  outline: none;
}

input[type='range']::-webkit-slider-thumb {
  -webkit-appearance: none;
  height: 16px;
  width: 16px;
}

input[type='range']::-moz-range-thumb {
  -webkit-appearance: none;
  background: transparent;
  border: none;
}

.track {
  background: lightblue;
  width: 100%;
  height: 1rem;
  margin-top: 1.2rem;
  position: relative;
  border-radius: 1rem;
  overflow: hidden;
}

.animate-track {
  background: rgb(204, 204, 204);
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  // we are moving this div away from left, so the parent div color shows
  transform: translateX(0%); // it repositions an element horizontoly
  // none prevents all click, state and cursor options on the specified HTML element
  pointer-events: none; // so we can grab and drag
}

@media screen and (max-width: 768px) {
  .time-control {
    width: 90%;
  }
  .player-control {
    width: 60%;
  }
}
